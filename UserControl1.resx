<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imageBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>
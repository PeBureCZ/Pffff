<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imageBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAP8AAADGCAMAAAAqo6adAAAABGdBTUEAALGPC/xhBQAAAG9QTFRFQEBA
        ////Kysr5ubmMzMzsbGxvLy8Ozs7NjY2KSkpOjo6MDAwNDQ0+/v76urqnp6e8PDwwsLC4ODg0dHRy8vL
        kZGRTExMYGBgZ2dnWFhY2tratra2SEhIdnZ2Xl5emZmZhYWFqampfX19eXl5Dw8PvhNFDAAABfFJREFU
        eF7tnWtDskoQgBUxbgFmiuYls87//42HcjoBsjA7MLsrZ573U7lrPMTsZXbsnQmCIAiCIAiCIAiCIAiC
        IAiCIPxvCL3pEIKTBmGeLaZCluvfAP84nw5LH6zw+EvoOwXEH6zwiD/0nQLiD1Z4xB/6TgHxBys84g99
        p4D4gxUe8Ye+U0D8wQqP+EPfKcDvn22W+SVfbjL42i2Y/Q/bIkn8MAz9JCkua/iuQ7D6b3ZRGECv2SwI
        o/0GXnEGRv9s7/3J3wi8vWNhwOf/lMTQoUr8/AKvuwGbfx5B8ybRFVo4AZf/xYPW93g5tHEBJv+lWr98
        Ap6glQPw+K9VD/+NaAHt7MPjXzQH/jrBG7SzD4v/MoGmKhJnjtBY/NsmvgbQ0joc/se+X3/5ALiyCuDw
        33dH/zfxGdrahsF/1T343/BW0NoyDP4v/Y9/GQCO7IQY/C+YkorQkUUgg/8ZMfzP4k9obRkG/13/8Fcu
        gfbQ2jIM/m8o/3dobRlr/jtobRkGf8T0P+nn/wMz/oVbaK1PPubukcH/+gwNu+h7EzXraMzQYfA/dOU+
        fvHIufAiSEbMoDH4z1ElpdBWm235dCXjRQCHP2IAIIf/5ntzMeLkyeGPCICI+Pint7llvAjg8O+fAcnb
        39+1NX34aMDi3/sAUC//+PvGo2UQWfx/BqkO/Au00yT721knI+0fefy7E8Ax9Zf3XnlX6gjSgMk/q5z7
        NgliYu4nryZWRooAJv/5WnkDgpg4ex/qeTVqENXh8p8vZu3LoPBEPAFPT4076h3glSGw+c/Tc3T/CATR
        Zwqv6/LRvJ9BAa8Mgc+/XKsVSf0OBEnxCq9p83I/p/r0PeR/cPqXF/3m+bBiCWLfe6efeqzaommECOD1
        L4eB5bnwovJf8bUcsmvZt+0pRogAbv9v0lW2okY9cG0/U3geHAEm/IezUBbTkMcT4DH8lcvJ4DTwwXoI
        /636IsMPaEPkEfxfu7aTAyPgAfzTnnTSoAh4AP+vbv9hEeC+/1NvMmXIUbrz/pWch4p4QAQ471/NeSgY
        EgEu+Hf9+mo5DxURPQIc8L/O1Pkg1FlSuQwiR4B9/2MUn5Q3oJnzUBCSq0ms+z+VS/tgpsgJ3eU8VETU
        nbVt/1taQ3EDWnIeKqg5Vcv+P8d5Ja1J0VXPwq8K9UTJrv/fyj4I7/P5rTkPFR7tQwVW/Q+VyS14bt6A
        3iryOiEpAmz6r2s/O0jq2bwFPvh/oEWARf9F84gkqW1lUWVkVTzKhwrs+WfBnaBXuQEdOQ8VCSECrPmv
        yknvjr+t3Ksq49dBTKips+W/al/ZebCOSeFrPQgRYMk/LRRzGyzkvrALvzq+dgTY8U/flFP7z4cDe3Me
        CvQjwI7/rmNlUz7EK72Zv0Kie21W/PedT3d01Fr41Uk0T9dt+Hfrlys53Zm/QqxZHGvB/6z/IzXQLA00
        7//Jql+OH1oRYNz/gzy2IdErjjXtv+XW14wAw/45cWLXwtMotDDrfzWhr1UaaNS/869CjIhGcaxJ/yNh
        T0cDX19t0J+6qCeAjwBz/htz+uU1YiPAmD8loTEAbHm4Kf9X/nm/BjYCDPlXM91mQJaHm/GvZ7rNEKGK
        Y434t6R6+cEVx5rwX9nQL68TUxxrwF+R6uWnepyggt9fmeplJzjBJXTA7m9Pf4b5lC23f0em2wD9EcDt
        v6MdZIxEfwQw+/elernpLQ3k9T9j/hQEK33l4az+3KleBEFPeTinP3uqF0NPBDD6G0j1YugujuXzd0S/
        DIGuCGDzN5LpRtFZHMvlbybTjeO3qKQNJn9TmW4coToCePy/i5odIv6C67qHxV+jbtkM6gjg8H/5J/Hd
        IolUhVEM/unxyT1Uy2Cm8e9hEH+wwiP+0HcKiD9Y4RF/6DsFxB+s8Ig/9J0C4g9WeMQf+k4B8QcrPOIP
        faeA+IMVHvGHvlNA/MEKj/hD3ykg/mCFR/yh7xSg+Dvzn3eOAME/zLPFVMhyQoFe6E0Hy/WJgiAIgiAI
        giAIgiAIgiAIgiAIxpjN/gVIjY/JKk/fdAAAAABJRU5ErkJggg==
</value>
  </data>
</root>